.sidebarComments
  .row
    - comments_title = current_user.client? ? t('designer_center.edit.question') : t('designer_center.edit.comments')
    - if show_comment_switcher
      .col-xs-4
        %p.commentTabs.text-left= comments_title
      .col-xs-8
        %ul.btn-group.btnGroupComments{role: 'tablist'}
          %li.btn.btn-default.active{role: 'presentation'}
            %a{'aria-controls' => 'allComents', 'data-toggle' => 'tab', href: '#allComents', role: 'tab'}= t('designer_center.edit.all')
          %li.btn.btn-default{role: 'presentation'}
            %a{'aria-controls' => 'meComments', 'data-toggle' => 'tab', href: '#meComments', role: 'tab'}= t('designer_center.edit.me')
          %li.btn.btn-default{role: 'presentation'}
            %a{'aria-controls' => 'designerComments',
                'data-toggle' => 'tab',
                href: '#designerComments',
                role: 'tab'}= collocutor(current_user)
    - else
      .col-xs-12
        %p.commentTabs.text-left= comments_title
  %div{role: 'tabpanel'}
    #scrollBoxComments.tab-content.notes.questionBox
      #allComents.tab-pane.active{role: 'tabpanel'}
        - comments.each do |comment|
          = render 'designer_center_requests/edit/comment',
              { user: current_user, comment_view: CommentView.create(comment, current_user) }

      #meComments.tab-pane{role: 'tabpanel'}
        - comments.where(role: current_user.role).each do |comment|
          = render 'designer_center_requests/edit/comment',
              { user: current_user, comment_view: CommentView.create(comment, current_user) }

      #designerComments.tab-pane{role: 'tabpanel'}
        - comments.where.not(role: current_user.role).each do |comment|
          = render 'designer_center_requests/edit/comment',
              { user: current_user, comment_view: CommentView.create(comment, current_user) }

    = render 'shared/setup_uploadify'

    :coffee
      $ ->
        PicturesZoom.init('.sidebarComments .thumb .enlarge')
        CommentAttachmentUploader.bindUploadButton($('.sidebarComments .commentTextArea'))

    - unless defined?(readonly) && readonly
      .commentTextArea
        = render 'concept_board_comments/new', contest_request: request

:javascript
    $(document).ready(function(){
      $('#scrollBoxComments').enscroll({
        verticalTrackClass: 'scrollBoxCommentsTrack',
        verticalHandleClass: 'scrollBoxCommentsHandle',
        minScrollbarLength: 28
      });

      ConceptboardComment.init()
      CommentsBlock.fitCommentsArea()

      $('.btnGroupComments a').click(function(){
        mixpanel.track('Concept board comments filtered by sender')
      })
    })

    $(window).resize(function(){
      CommentsBlock.fitCommentsArea()
    })
